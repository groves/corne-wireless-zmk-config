/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define CA(key) LC(LA(key))
#define HY(key) CA(LS(LG(key)))

#define LH 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define RH 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
#define PRIOR_IDLE 100
#define TAP_TERM 200

/ {
        behaviors {
                lh_lt: lh_positional_layer_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "LEFT_HAND_LAYER_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <TAP_TERM>;
                    require-prior-idle-ms = <PRIOR_IDLE>;
                    bindings = <&mo>, <&kp>;
                    hold-trigger-key-positions = <RH>;
                };
                rh_lt: rh_positional_layer_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "RIGHT_HAND_LAYER_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <TAP_TERM>;
                    require-prior-idle-ms = <PRIOR_IDLE>;
                    bindings = <&mo>, <&kp>;
                    hold-trigger-key-positions = <LH>;
                };
                lh_mt: lh_positional_mod_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "LEFT_HAND_MOD_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <TAP_TERM>;
                    require-prior-idle-ms = <PRIOR_IDLE>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <RH>;
                    hold-trigger-on-release;
                };
                rh_mt: rh_positional_mod_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "RIGHT_HAND_MOD_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <TAP_TERM>;
                    require-prior-idle-ms = <PRIOR_IDLE>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <LH>;
                    hold-trigger-on-release;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "0";
                        bindings = <
   &trans &lh_mt LCTRL Q &lh_mt LALT W &lh_mt LCMD F &kp P      &kp B    &kp J   &kp L       &rh_mt LCMD U &rh_mt LALT Y &rh_mt LCTRL SEMI &trans
   &trans &kp A          &lh_lt 1 R    &lh_lt 2 S    &lh_lt 3 T &kp G    &kp M   &rh_lt 3 N  &rh_lt 2 E    &rh_lt 1 I    &kp O             &trans
   &trans &kp Z          &kp X         &kp C         &kp D      &kp V    &kp K   &kp H       &kp COMMA     &kp DOT       &kp FSLH          &trans
                                       &kp TAB       &kp LSHFT  &kp BSPC &kp SQT &lt 1 SPACE &kp RET
                        >;
                };
                1_layer {
                        label = "1";
                        bindings = <
   &trans  &kp EXCL &kp AT   &kp UP   &kp DLLR  &kp PRCNT &kp BSLH  &kp N7 &kp N8 &kp N9 &kp EQUAL &trans
   &trans  &kp LPAR &kp LEFT &kp DOWN &kp RIGHT &kp RPAR  &kp UNDER &kp N4 &kp N5 &kp N6 &kp MINUS &trans
   &trans  &kp LBKT &kp RBKT &kp HASH &kp LBRC  &kp RBRC  &kp ASTRK &kp N1 &kp N2 &kp N3 &kp PLUS  &trans
                             &trans   &kp N0    &kp DEL   &trans    &trans &trans
                        >;
                };

                2_layer {
                        label = "2";
                        bindings = <
   &trans  &kp LC(F12) &kp LC(F7) &kp LC(F8) &kp LC(F9) &kp HY(B) &kp HY(P) &kp F7    &kp F8    &kp F9 &kp F12 &trans
   &trans  &kp LC(F11) &kp LC(F4) &kp LC(F5) &kp LC(F6) &kp HY(G) &kp HY(M) &kp F4    &kp F5    &kp F6 &kp F11 &trans
   &trans  &kp LC(F10) &kp LC(F1) &kp LC(F2) &kp LC(F3) &kp HY(U) &kp HY(Y) &kp F1    &kp F2    &kp F3 &kp F10 &trans
                  	              &kp HY(O)  &kp HY(A)  &kp HY(L) &kp HY(L) &kp HY(A) &kp HY(O)
                        >;
                };
                3_layer {
                        label = "3";
                        bindings = <
   &trans  &kp HY(Q) &kp CA(LG(W)) &kp CA(LG(F)) &kp HY(P) &kp HY(B)     &kp HY(J) &kp LG(N0) &kp LG(MINUS) &kp LG(PLUS) &kp HY(S)    &trans
   &trans  &kp PIPE  &kp GRAVE     &kp TILDE     &kp ESC   &kp HY(SPACE) &kp CARET &kp ESC    &kp AMPS      &kp CA(BSLH) &kp CA(RBKT) &trans
   &trans  &kp HY(Z) &kp HY(X)     &kp HY(C)     &kp HY(D) &kp HY(V)     &kp HY(K) &kp HY(H)  &kp HY(A)     &kp HY(E)    &kp HY(I)    &trans
                  	               &kp HY(N)     &kp HY(R) &kp HY(T)     &kp HY(T) &kp HY(R)  &kp HY(N)
                        >;
                };
        };
};
